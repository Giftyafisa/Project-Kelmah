Loaded environment variables from service-specific .env
Loaded environment variables from service-specific .env
Database mode: cloud
Using TimescaleDB Cloud connection
2025-03-25 01:19:36 [32minfo[39m: Auth service running on port 5001
Executing (default): SELECT 1+1 AS result
2025-03-25 01:19:40 [32minfo[39m: Database connection established successfully.
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_users_role' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'users' AND tc.table_catalog = 'tsdb'
Executing (default): ALTER TABLE "users" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "users"  ADD UNIQUE ("email");ALTER TABLE "users" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "users" ALTER COLUMN "password" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "firstName" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "firstName" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "firstName" TYPE VARCHAR(255);
2025-03-25 01:19:42 [32minfo[39m: ::1 - - [25/Mar/2025:01:19:42 +0000] "GET /health HTTP/1.1" 200 123 "-" "curl/8.9.1"
Executing (default): ALTER TABLE "users" ALTER COLUMN "lastName" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "lastName" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "lastName" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "role" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "role" SET DEFAULT 'worker';DO 'BEGIN CREATE TYPE "public"."enum_users_role" AS ENUM(''admin'', ''worker'', ''hirer''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "users" ALTER COLUMN "role" TYPE "public"."enum_users_role" USING ("role"::"public"."enum_users_role");
Executing (default): ALTER TABLE "users" ALTER COLUMN "isVerified" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "isVerified" SET DEFAULT false;ALTER TABLE "users" ALTER COLUMN "isVerified" TYPE BOOLEAN;
Executing (default): ALTER TABLE "users" ALTER COLUMN "verificationToken" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "verificationToken" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "verificationToken" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "refreshToken" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "refreshToken" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "refreshToken" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "resetPasswordToken" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "resetPasswordToken" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "resetPasswordToken" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "resetPasswordExpires" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "resetPasswordExpires" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "resetPasswordExpires" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "users" ALTER COLUMN "lastLogin" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "lastLogin" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "lastLogin" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "users" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "users" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "users" ALTER COLUMN "oauthProvider" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "oauthProvider" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "oauthProvider" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "oauthId" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "oauthId" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "oauthId" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "oauthToken" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "oauthToken" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "oauthToken" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "mfaEnabled" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "mfaEnabled" SET DEFAULT false;ALTER TABLE "users" ALTER COLUMN "mfaEnabled" TYPE BOOLEAN;
Executing (default): ALTER TABLE "users" ALTER COLUMN "mfaSecret" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "mfaSecret" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "mfaSecret" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "mfaVerified" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "mfaVerified" SET DEFAULT false;ALTER TABLE "users" ALTER COLUMN "mfaVerified" TYPE BOOLEAN;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2025-03-25 01:19:45 [32minfo[39m: Database synchronized successfully.
Executing (default): SELECT count(*) AS "count" FROM "users" AS "User";
