# Auth Service Environment Variables

# Service Configuration
NODE_ENV=development
AUTH_SERVICE_PORT=5001
API_URL=http://localhost:8080
FRONTEND_URL=http://localhost:5173

# Database Configuration - Using TimescaleDB
TIMESCALE_DB_URL=postgres://username:password@hostname:port/database?sslmode=require
DB_MODE=cloud
DB_SYNC_FORCE=false
DB_SYNC_ALTER=true

# JWT Configuration
JWT_SECRET=your_jwt_secret_key_here
JWT_EXPIRATION=1d
JWT_REFRESH_SECRET=your_refresh_jwt_secret_key_here
REFRESH_TOKEN_EXPIRATION=7d
SESSION_SECRET=your_session_secret_key

# Email Configuration
EMAIL_SERVICE=gmail
EMAIL_USER=your_email@gmail.com
EMAIL_PASSWORD=your_app_password
EMAIL_FROM=Kelmah Platform <your_email@gmail.com>

# OAuth Configuration
# To enable social logins, you need to create OAuth applications with the respective providers
# and set the credentials below. Without these, social login routes will return a 501 response.

# Google OAuth - Get these from Google Cloud Console: https://console.cloud.google.com/
# 1. Create a project
# 2. Navigate to APIs & Services > Credentials
# 3. Create an OAuth client ID (Web Application)
# 4. Set authorized redirect URIs to: http://localhost:8080/api/auth/google/callback
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# Facebook OAuth - Get these from Facebook Developer Console: https://developers.facebook.com/
# 1. Create an App
# 2. Add the Facebook Login product
# 3. Set the Valid OAuth Redirect URIs to: http://localhost:8080/api/auth/facebook/callback
FACEBOOK_APP_ID=your-facebook-app-id
FACEBOOK_APP_SECRET=your-facebook-app-secret

# LinkedIn OAuth (if needed in the future)
# LINKEDIN_CLIENT_ID=your-linkedin-client-id
# LINKEDIN_CLIENT_SECRET=your-linkedin-client-secret

# Logging
LOG_LEVEL=info 