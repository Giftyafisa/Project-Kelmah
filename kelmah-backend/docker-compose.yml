version: '3.8'

services:
  # API Gateway - Entry point for all client requests
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: kelmah-api-gateway
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - MESSAGING_SERVICE_URL=http://messaging-service:3003
      - JOB_SERVICE_URL=http://job-service:3004
      - PAYMENT_SERVICE_URL=http://payment-service:3005
      - REVIEW_SERVICE_URL=http://review-service:3006
      - INTERNAL_API_KEY=${INTERNAL_API_KEY}
      - JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
      - LOG_LEVEL=info
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - REDIS_URL=redis://redis:6379
    depends_on:
      - auth-service
      - user-service
      - messaging-service
      - job-service
      - payment-service
      - review-service
      - redis
    networks:
      - kelmah-network

  # Authentication Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: kelmah-auth-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://mongo:27017/kelmah_auth
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=24h
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - REFRESH_TOKEN_EXPIRE=7d
      - USER_SERVICE_URL=http://user-service:3002
      - MESSAGING_SERVICE_URL=http://messaging-service:3003
      - PAYMENT_SERVICE_URL=http://payment-service:3005
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - INTER_SERVICE_API_KEY=${INTER_SERVICE_API_KEY}
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - kelmah-network

  # User Service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: kelmah-user-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3002
      - MONGODB_URI=mongodb://mongo:27017/kelmah_user
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - INTER_SERVICE_API_KEY=${INTER_SERVICE_API_KEY}
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - kelmah-network

  # Messaging Service
  messaging-service:
    build:
      context: ./services/messaging-service
      dockerfile: Dockerfile
    container_name: kelmah-messaging-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - MONGODB_URI=mongodb://mongo:27017/kelmah_messaging
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - INTER_SERVICE_API_KEY=${INTER_SERVICE_API_KEY}
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - JOB_SERVICE_URL=http://job-service:3004
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - kelmah-network

  # Job Service
  job-service:
    build:
      context: ./services/job-service
      dockerfile: Dockerfile
    container_name: kelmah-job-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3004
      - MONGODB_URI=mongodb://mongo:27017/kelmah_job
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - INTER_SERVICE_API_KEY=${INTER_SERVICE_API_KEY}
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - MESSAGING_SERVICE_URL=http://messaging-service:3003
      - PAYMENT_SERVICE_URL=http://payment-service:3005
      - REVIEW_SERVICE_URL=http://review-service:3006
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - kelmah-network

  # Payment Service
  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    container_name: kelmah-payment-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3005
      - MONGODB_URI=mongodb://mongo:27017/kelmah_payment
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - INTER_SERVICE_API_KEY=${INTER_SERVICE_API_KEY}
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - JOB_SERVICE_URL=http://job-service:3004
      - MESSAGING_SERVICE_URL=http://messaging-service:3003
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - kelmah-network

  # Review Service
  review-service:
    build:
      context: ./services/review-service
      dockerfile: Dockerfile
    container_name: kelmah-review-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3006
      - MONGODB_URI=mongodb://mongo:27017/kelmah_review
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - INTER_SERVICE_API_KEY=${INTER_SERVICE_API_KEY}
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - JOB_SERVICE_URL=http://job-service:3004
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - kelmah-network

  # MongoDB Database
  mongo:
    image: mongo:5.0
    container_name: kelmah-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    networks:
      - kelmah-network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: kelmah-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management interface port
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - kelmah-network

  # Redis for caching and rate limiting
  redis:
    image: redis:6-alpine
    container_name: kelmah-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - kelmah-network

# Volumes for persistent data
volumes:
  mongodb_data:
  rabbitmq_data:
  redis_data:

# Network configuration
networks:
  kelmah-network:
    driver: bridge 